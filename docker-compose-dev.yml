version: "3"

services:

  twitter:
    build: ./microservices/twitter
    restart: always
    command: yarn run start-dev
    environment:
      - NODE_ENV=development
    volumes:
      - ./microservices/twitter/src:/src
      - ./microservices/twitter/node_modules:/node_modules
      - ./microservices/twitter/package.json:/package.json
    depends_on:
      - redis


  news_server:
    build: ./microservices/news_server
    restart: always
    command: yarn run start-dev
    environment:
      - NODE_ENV=development
    volumes:
      - ./microservices/news_server/src:/src
      - ./microservices/news_server/node_modules:/node_modules
      - ./microservices/news_server/package.json:/package.json
    depends_on:
      - redis

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "64000:8081"

  api:
    build: ./microservices/api
    restart: always
    command: ./wait-for-it.sh redis:6379 -- yarn run start-dev
    environment:
      - NODE_ENV=test
      - PRODUCTION_ENV=http://localhost:3000
    volumes:
      - ./microservices/api/src:/src
      - ./microservices/api/node_modules:/node_modules
      - ./microservices/api/package.json:/package.json
    ports: 
      - "9000"
    depends_on:
      - redis

  redis:
    build: ./microservices/redis
    restart: always
    volumes: 
    - ./microservices/redis/data:/data
    ports: 
      - "6379:6379"

  binance_exchange_usd:
    build: ./microservices/exchange_server
    restart: always
    environment:
      - DEDICATED_TO=binance
      - MAIN_COIN=USD
      - NODE_ENV=dev
    command: yarn run start-dev
    volumes:
      - ./microservices/exchange_server/src:/src
      - ./microservices/exchange_server/config:/config
    ports:
      - "7000"
    depends_on:
      - redis

  # news:
  #   build: ./microservices/news_server
  #   restart: always
  #   command: yarn run start-dev
  #   volumes:
  #     - ./microservices/news_server/src:/src
  #   ports:
  #     - "5500"
  #   depends_on:
  #     - redis
  socketio:
    build: ./microservices/socketio
    restart: always
    command: yarn run start-dev
    volumes:
      - ./microservices/socketio/src:/src
      - ./microservices/socketio/config:/config
    ports:
      - "5000"
    depends_on:
      - redis
  
  # EXECUTE DATABASE SERVER FOR BINANCE
  # database_binance:
  #   build: ./microservices/database_server
  #   restart: always
  #   command: yarn run start-dev
  #   volumes:
  #     - ./microservices/database_server/src:/src
  #   environment:
  #     - EXCHANGE=binance
  #     - NODE_ENV=dev
  #   depends_on:
  #     - redis
  
  load_balancer:
    build:
      context: ./microservices/load_balancer
      dockerfile: Dockerfile-dev
    volumes: 
      - ./microservices/load_balancer/load_balancer_dev.conf:/etc/nginx/nginx.conf
    restart: always
    ports:
      - "8080:80"
    links: 
      - api
      - socketio
    depends_on: 
      - api
      - socketio