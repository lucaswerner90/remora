version: "3"

services:
  ###################################################################### 
  ######################################################################
  ######################################################################
  #                         API EXPRESS SERVER
  ###################################################################### 
  ######################################################################
  ######################################################################
  api:
    build: ./microservices/api
    restart: always
    command: yarn run start
    environment:
      - NODE_ENV=prod
      - PRODUCTION_ENV=https://remora.app
    ports: 
      - "9000"
    depends_on:
      - redis
  ###################################################################### 
  ######################################################################
  ######################################################################
  #                         REDIS SERVER
  ###################################################################### 
  ######################################################################
  ######################################################################
  redis:
    build: ./microservices/redis
    restart: always
    volumes: 
    - ./microservices/redis/data:/data
    ports: 
      - "6379"

  ###################################################################### 
  ######################################################################
  ######################################################################
  #                         CLIENT SERVER
  ###################################################################### 
  ######################################################################
  ######################################################################
  nextjs:
    build: ./microservices/client
    restart: always
    ports: 
      - "3000"

  ###################################################################### 
  ######################################################################
  ######################################################################
  #                         BINANCE EXCHANGE FOR USD SERVER
  ###################################################################### 
  ######################################################################
  ######################################################################
  binance_exchange_usd:
    build: ./microservices/exchange_server
    restart: always
    environment:
      - DEDICATED_TO=binance
      - MAIN_COIN=USD
      - NODE_ENV=prod
    command: yarn run start
    ports:
      - "7000"
    depends_on:
      - redis
  ###################################################################### 
  ######################################################################
  ######################################################################
  #                         SOCKETIO SERVER
  ###################################################################### 
  ######################################################################
  ######################################################################
  socketio:
    build: ./microservices/socketio
    restart: always
    command: yarn run start
    ports:
      - "5000"
    depends_on:
      - redis
  
  ###################################################################### 
  ######################################################################
  ######################################################################
  #                         BINANCE DATABASE SERVER
  ###################################################################### 
  ######################################################################
  ######################################################################
  database_binance:
    build: ./microservices/database_server
    restart: always
    command: yarn run start
    environment:
      - EXCHANGE=binance
      - NODE_ENV=prod
    depends_on:
      - redis
  
  ###################################################################### 
  ######################################################################
  ######################################################################
  #      CREATES THE LOAD BALANCER FOR THE WHOLE SERVICES SERVER
  ###################################################################### 
  ######################################################################
  ######################################################################
  load_balancer:
    build: ./microservices/load_balancer
    restart: always
    ports:
      - "8080:443"
    links: 
      - api
      - socketio
    depends_on: 
      - api
      - socketio


  nginx:
    build: ./microservices/nginx
    volumes: 
      - ./microservices/nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    ports:
      - "443:443"
    links: 
      - nextjs
    depends_on: 
      - load_balancer
      - nextjs